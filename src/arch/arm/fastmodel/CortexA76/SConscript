# Copyright 2019 Google, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met: redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer;
# redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution;
# neither the name of the copyright holders nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Import('*')

if env['CONF']['FASTMODEL_CORTEXA76']:
    env.TagImplies('fastmodel cortexa76', 'arm fastmodel')

protocol_dir = Dir('..').Dir('protocol')

if env['CONF']['FASTMODEL_CORTEXA76']:
    for name in ('x1', 'x2', 'x3', 'x4'):
        ArmFastModelComponent(Dir(name).File(name + '.sgproj'),
                              Dir(name).File(name + '.lisa'),
                              protocol_dir.File(
                                  'ExportedClockRateControlProtocol.lisa'),
                              tags='fastmodel cortexa76'
                              ).prepare_env(env)

if env['CONF']['FASTMODEL_CORTEXA76']:
    SimObject('FastModelCortexA76.py', sim_objects=[
        'FastModelCortexA76', 'FastModelCortexA76Cluster'] +
        [f'FastModelScxEvsCortexA76x{num}' for num in (1, 2, 3, 4)],
        tags='fastmodel cortexa76')
Source('cortex_a76.cc', tags='fastmodel cortexa76')
Source('evs.cc', tags='fastmodel cortexa76')
Source('thread_context.cc', tags='fastmodel cortexa76')
